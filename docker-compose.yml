version: "3.8"
services:
  backend-userservice:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    env_file:
      - ./user_service/.env
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      db-userservice:
        condition: service_healthy
    networks:
      - user_network

  db-userservice:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dbName
    ports:
      - "5433:5432"
    volumes:
      - db_data_user_service:/var/lib/postgresql/data
      - ./user_service/internal/migration:/docker-entrypoint-initdb.d  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - user_network

  backend-chatservice:
    build: 
      context: ./chat_service
      dockerfile: Dockerfile
    env_file:
      - ./chat_service/.env
    ports:
      - "8082:8080"
    depends_on:
      db-chatservice:
        condition: service_healthy
    networks:
      - user_network 

  db-chatservice:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dbName
    ports:
      - "5434:5432"
    volumes:
      - db_data_chat_service:/var/lib/postgresql/data
      - ./chat_service/internal/infrastructure/migration:/docker-entrypoint-initdb.d  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - user_network

volumes:
  db_data_user_service:
  db_data_chat_service:

networks:
  user_network:
    driver: bridge
